<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on Queensferry&#39;s Blog</title>
    <link>/tags/algorithm/</link>
    <description>Recent content in algorithm on Queensferry&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 07 Aug 2019 18:58:57 +0800</lastBuildDate>
    
	<atom:link href="/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Manacher 算法分析与实现</title>
      <link>/posts/technique/basis/algorithm/manacher-%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Wed, 07 Aug 2019 18:58:57 +0800</pubDate>
      
      <guid>/posts/technique/basis/algorithm/manacher-%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;最近刚做完 Leetcode 上的 &lt;a href=&#34;https://leetcode-cn.com/problems/longest-palindromic-substring/&#34;&gt;Longest Palindromic Substring&lt;/a&gt;，用的是 Manacher 算法（国内俗称马拉车算法）。之前高中打 OI 时也做过同样的题目，不过当时是作为动态规划的例题来介绍的；再加上后来&lt;del&gt;我没认真学 Manacher 算法&lt;/del&gt;，所以直到这几天才算是初步学习了该算法。&lt;/p&gt;

&lt;p&gt;Manacher 算法是一种能以 O(n) 的时间复杂度找出一个字符串里的所有回文子串的算法。相比于暴力搜索（O(n^3)）与动态规划/中心扩展（O(n^2)），它的时间复杂度要低得多。这篇博客就简单记录一下我对 Manacher 算法的理解。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>